name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: chat_app
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    strategy:
      matrix:
        service: [auth_service, chat_service, api_gateway]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd ${{ matrix.service }}
          pip install -r requirements.txt
          pip install pytest httpx

      - name: Run tests
        run: |
          cd ${{ matrix.service }}
          pytest -v
          
  docker:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-auth ./auth_service
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-auth
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-gateway ./gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-gateway
          docker build -t ${{ secrets.DOCKER_USERNAME }}/chat-service ./chat_service
          docker push ${{ secrets.DOCKER_USERNAME }}/chat-service
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/chat-gateway
            docker pull ${{ secrets.DOCKER_USERNAME }}/chat-auth
            docker pull ${{ secrets.DOCKER_USERNAME }}/chat-service
            docker compose -f /home/ubuntu/chat-app/docker-compose.yml up -d
